$date
	Fri Jun 17 00:19:32 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ns
$end
$scope module Memoria_tb $end
$var wire 16 ! bus_de_direcciones [15:0] $end
$var wire 32 " bus_de_datos_salida [31:0] $end
$var wire 32 # bus_de_datos_entrada [31:0] $end
$var wire 1 $ bit_de_control_escritura $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$scope module cpu $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 32 ' MBR_R [31:0] $end
$var reg 32 ( IR [31:0] $end
$var reg 16 ) MAR [15:0] $end
$var reg 32 * MBR_W [31:0] $end
$var reg 16 + PC [15:0] $end
$var reg 3 , dir [2:0] $end
$var reg 5 - opcode [4:0] $end
$var reg 8 . operand_a [7:0] $end
$var reg 16 / operand_b [15:0] $end
$var reg 4 0 stage [3:0] $end
$var reg 1 $ write $end
$upscope $end
$scope module mem $end
$var wire 16 1 address [15:0] $end
$var wire 1 % clk $end
$var wire 32 2 data_in [31:0] $end
$var wire 32 3 data_out [31:0] $end
$var wire 1 $ write $end
$scope begin register[0] $end
$var wire 32 4 tmp [31:0] $end
$upscope $end
$scope begin register[1] $end
$var wire 32 5 tmp [31:0] $end
$upscope $end
$scope begin register[2] $end
$var wire 32 6 tmp [31:0] $end
$upscope $end
$scope begin register[3] $end
$var wire 32 7 tmp [31:0] $end
$upscope $end
$scope begin register[4] $end
$var wire 32 8 tmp [31:0] $end
$upscope $end
$scope begin register[5] $end
$var wire 32 9 tmp [31:0] $end
$upscope $end
$scope begin register[6] $end
$var wire 32 : tmp [31:0] $end
$upscope $end
$scope begin register[7] $end
$var wire 32 ; tmp [31:0] $end
$upscope $end
$scope begin register[8] $end
$var wire 32 < tmp [31:0] $end
$upscope $end
$scope begin register[9] $end
$var wire 32 = tmp [31:0] $end
$upscope $end
$scope begin register[10] $end
$var wire 32 > tmp [31:0] $end
$upscope $end
$scope begin register[11] $end
$var wire 32 ? tmp [31:0] $end
$upscope $end
$scope begin register[12] $end
$var wire 32 @ tmp [31:0] $end
$upscope $end
$scope begin register[13] $end
$var wire 32 A tmp [31:0] $end
$upscope $end
$scope begin register[14] $end
$var wire 32 B tmp [31:0] $end
$upscope $end
$scope begin register[15] $end
$var wire 32 C tmp [31:0] $end
$upscope $end
$scope begin register[16] $end
$var wire 32 D tmp [31:0] $end
$upscope $end
$scope begin register[17] $end
$var wire 32 E tmp [31:0] $end
$upscope $end
$scope begin register[18] $end
$var wire 32 F tmp [31:0] $end
$upscope $end
$scope begin register[19] $end
$var wire 32 G tmp [31:0] $end
$upscope $end
$scope begin register[20] $end
$var wire 32 H tmp [31:0] $end
$upscope $end
$scope begin register[21] $end
$var wire 32 I tmp [31:0] $end
$upscope $end
$scope begin register[22] $end
$var wire 32 J tmp [31:0] $end
$upscope $end
$scope begin register[23] $end
$var wire 32 K tmp [31:0] $end
$upscope $end
$scope begin register[24] $end
$var wire 32 L tmp [31:0] $end
$upscope $end
$scope begin register[25] $end
$var wire 32 M tmp [31:0] $end
$upscope $end
$scope begin register[26] $end
$var wire 32 N tmp [31:0] $end
$upscope $end
$scope begin register[27] $end
$var wire 32 O tmp [31:0] $end
$upscope $end
$scope begin register[28] $end
$var wire 32 P tmp [31:0] $end
$upscope $end
$scope begin register[29] $end
$var wire 32 Q tmp [31:0] $end
$upscope $end
$scope begin register[30] $end
$var wire 32 R tmp [31:0] $end
$upscope $end
$scope begin register[31] $end
$var wire 32 S tmp [31:0] $end
$upscope $end
$scope begin register[32] $end
$var wire 32 T tmp [31:0] $end
$upscope $end
$scope begin register[33] $end
$var wire 32 U tmp [31:0] $end
$upscope $end
$scope begin register[34] $end
$var wire 32 V tmp [31:0] $end
$upscope $end
$scope begin register[35] $end
$var wire 32 W tmp [31:0] $end
$upscope $end
$scope begin register[36] $end
$var wire 32 X tmp [31:0] $end
$upscope $end
$scope begin register[37] $end
$var wire 32 Y tmp [31:0] $end
$upscope $end
$scope begin register[38] $end
$var wire 32 Z tmp [31:0] $end
$upscope $end
$scope begin register[39] $end
$var wire 32 [ tmp [31:0] $end
$upscope $end
$scope begin register[40] $end
$var wire 32 \ tmp [31:0] $end
$upscope $end
$scope begin register[41] $end
$var wire 32 ] tmp [31:0] $end
$upscope $end
$scope begin register[42] $end
$var wire 32 ^ tmp [31:0] $end
$upscope $end
$scope begin register[43] $end
$var wire 32 _ tmp [31:0] $end
$upscope $end
$scope begin register[44] $end
$var wire 32 ` tmp [31:0] $end
$upscope $end
$scope begin register[45] $end
$var wire 32 a tmp [31:0] $end
$upscope $end
$scope begin register[46] $end
$var wire 32 b tmp [31:0] $end
$upscope $end
$scope begin register[47] $end
$var wire 32 c tmp [31:0] $end
$upscope $end
$scope begin register[48] $end
$var wire 32 d tmp [31:0] $end
$upscope $end
$scope begin register[49] $end
$var wire 32 e tmp [31:0] $end
$upscope $end
$scope begin register[50] $end
$var wire 32 f tmp [31:0] $end
$upscope $end
$scope begin register[51] $end
$var wire 32 g tmp [31:0] $end
$upscope $end
$scope begin register[52] $end
$var wire 32 h tmp [31:0] $end
$upscope $end
$scope begin register[53] $end
$var wire 32 i tmp [31:0] $end
$upscope $end
$scope begin register[54] $end
$var wire 32 j tmp [31:0] $end
$upscope $end
$scope begin register[55] $end
$var wire 32 k tmp [31:0] $end
$upscope $end
$scope begin register[56] $end
$var wire 32 l tmp [31:0] $end
$upscope $end
$scope begin register[57] $end
$var wire 32 m tmp [31:0] $end
$upscope $end
$scope begin register[58] $end
$var wire 32 n tmp [31:0] $end
$upscope $end
$scope begin register[59] $end
$var wire 32 o tmp [31:0] $end
$upscope $end
$scope begin register[60] $end
$var wire 32 p tmp [31:0] $end
$upscope $end
$scope begin register[61] $end
$var wire 32 q tmp [31:0] $end
$upscope $end
$scope begin register[62] $end
$var wire 32 r tmp [31:0] $end
$upscope $end
$scope begin register[63] $end
$var wire 32 s tmp [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
b11111000000000000000000000000000 ;
b10110010000000000000000000000000 :
b10101010000000000000000000000000 9
b10100010000000000000000000000000 8
b10010010000000000000000000000000 7
b10001010000000000000000000000000 6
b10000010000000000000000000000000 5
b0 4
bx 3
bx 2
bx 1
b0 0
bx /
bx .
bx -
bx ,
b0 +
bx *
bx )
bx (
bx '
1&
0%
x$
bx #
bx "
bx !
$end
#5
1%
#10
b0 #
b0 '
b0 3
b0 !
b0 )
b0 1
b1 0
0%
0&
#15
b0 (
b1 +
b10 0
1%
#20
0%
#25
b0 ,
b0 -
b11 0
1%
#30
0%
#35
b0 /
b0 .
b100 0
1%
#40
0%
#45
b101 0
1%
#50
0%
#55
b110 0
1%
#60
0%
#65
b111 0
1%
#70
0%
#75
b1000 0
1%
#80
0%
#85
b1001 0
1%
#90
0%
#95
b0 0
1%
#100
0%
#105
b10000010000000000000000000000000 #
b10000010000000000000000000000000 '
b10000010000000000000000000000000 3
b1 !
b1 )
b1 1
b1 0
1%
#110
0%
#115
b10000010000000000000000000000000 (
b10 +
b10 0
1%
#120
0%
#125
b10 ,
b10000 -
b11 0
1%
#130
0%
#135
b100 0
1%
#140
0%
#145
b101 0
1%
#150
0%
#155
b110 0
1%
#160
0%
#165
b111 0
1%
#170
0%
#175
b1000 0
1%
#180
0%
#185
b1001 0
1%
#190
0%
#195
b0 0
1%
#200
0%
#205
b10001010000000000000000000000000 #
b10001010000000000000000000000000 '
b10001010000000000000000000000000 3
b10 !
b10 )
b10 1
b1 0
1%
#210
0%
#215
b10001010000000000000000000000000 (
b11 +
b10 0
1%
#220
0%
#225
b10001 -
b11 0
1%
#230
0%
#235
b100 0
1%
#240
0%
#245
b101 0
1%
#250
0%
#255
b110 0
1%
#260
0%
#265
b111 0
1%
#270
0%
#275
b1000 0
1%
#280
0%
#285
b1001 0
1%
#290
0%
#295
b0 0
1%
#300
0%
#305
b10010010000000000000000000000000 #
b10010010000000000000000000000000 '
b10010010000000000000000000000000 3
b11 !
b11 )
b11 1
b1 0
1%
#310
0%
#315
b10010010000000000000000000000000 (
b100 +
b10 0
1%
#320
0%
#325
b10010 -
b11 0
1%
#330
0%
#335
b100 0
1%
#340
0%
#345
b101 0
1%
#350
0%
#355
b110 0
1%
#360
0%
#365
b111 0
1%
#370
0%
#375
b1000 0
1%
#380
0%
#385
b1001 0
1%
#390
0%
#395
b0 0
1%
#400
0%
#405
b10100010000000000000000000000000 #
b10100010000000000000000000000000 '
b10100010000000000000000000000000 3
b100 !
b100 )
b100 1
b1 0
1%
#410
0%
#415
b10100010000000000000000000000000 (
b101 +
b10 0
1%
#420
0%
#425
b10100 -
b11 0
1%
#430
0%
#435
b100 0
1%
#440
0%
#445
b101 0
1%
#450
0%
#455
b110 0
1%
#460
0%
#465
b111 0
1%
#470
0%
#475
b1000 0
1%
#480
0%
#485
b1001 0
1%
#490
0%
#495
b0 0
1%
#500
0%
#505
b10101010000000000000000000000000 #
b10101010000000000000000000000000 '
b10101010000000000000000000000000 3
b101 !
b101 )
b101 1
b1 0
1%
#510
0%
#515
b10101010000000000000000000000000 (
b110 +
b10 0
1%
#520
0%
#525
b10101 -
b11 0
1%
#530
0%
#535
b100 0
1%
#540
0%
#545
b101 0
1%
#550
0%
#555
b110 0
1%
#560
0%
#565
b111 0
1%
#570
0%
#575
b1000 0
1%
#580
0%
#585
b1001 0
1%
#590
0%
#595
b0 0
1%
#600
0%
#605
b10110010000000000000000000000000 #
b10110010000000000000000000000000 '
b10110010000000000000000000000000 3
b110 !
b110 )
b110 1
b1 0
1%
#610
0%
#615
b10110010000000000000000000000000 (
b111 +
b10 0
1%
#620
0%
#625
b10110 -
b11 0
1%
#630
0%
#635
b100 0
1%
#640
0%
#645
b101 0
1%
#650
0%
#655
b110 0
1%
#660
0%
#665
b111 0
1%
#670
0%
#675
b1000 0
1%
#680
0%
#685
b1001 0
1%
#690
0%
#695
b0 0
1%
#700
0%
#705
b11111000000000000000000000000000 #
b11111000000000000000000000000000 '
b11111000000000000000000000000000 3
b111 !
b111 )
b111 1
b1 0
1%
#710
0%
#715
b11111000000000000000000000000000 (
b1000 +
b10 0
1%
#720
0%
#725
b0 ,
b11111 -
b11 0
1%
#730
0%
#735
b100 0
1%
#740
0%
#745
b101 0
1%
#750
0%
#755
b110 0
1%
#760
0%
#765
b111 0
1%
#770
0%
#775
b1000 0
1%
#780
0%
#785
b1001 0
1%
#790
0%
#795
b0 0
1%
#800
0%
#805
bx #
bx '
bx 3
b1000 !
b1000 )
b1000 1
b1 0
1%
#810
0%
#815
bx (
b1001 +
b10 0
1%
#820
0%
#825
bx ,
bx -
b11 0
1%
#830
0%
#835
bx /
bx .
b100 0
1%
#840
0%
#845
b101 0
1%
#850
0%
#855
b110 0
1%
#860
0%
#865
b111 0
1%
#870
0%
#875
b1000 0
1%
#880
0%
#885
b1001 0
1%
#890
0%
#895
b0 0
1%
#900
0%
#905
b1001 !
b1001 )
b1001 1
b1 0
1%
#910
0%
#915
b1010 +
b10 0
1%
#920
0%
#925
b11 0
1%
#930
0%
#935
b100 0
1%
#940
0%
#945
b101 0
1%
#950
0%
#955
b110 0
1%
#960
0%
#965
b111 0
1%
#970
0%
#975
b1000 0
1%
#980
0%
#985
b1001 0
1%
#990
0%
#995
b0 0
1%
#1000
0%
#1005
b1010 !
b1010 )
b1010 1
b1 0
1%
#1010
0%
#1015
b1011 +
b10 0
1%
#1020
0%
#1025
b11 0
1%
#1030
0%
#1035
b100 0
1%
#1040
0%
#1045
b101 0
1%
#1050
0%
#1055
b110 0
1%
#1060
0%
#1065
b111 0
1%
#1070
0%
#1075
b1000 0
1%
#1080
0%
#1085
b1001 0
1%
#1090
0%
#1095
b0 0
1%
#1100
0%
#1105
b1011 !
b1011 )
b1011 1
b1 0
1%
#1110
0%
#1115
b1100 +
b10 0
1%
#1120
0%
#1125
b11 0
1%
#1130
0%
#1135
b100 0
1%
#1140
0%
#1145
b101 0
1%
#1150
0%
#1155
b110 0
1%
#1160
0%
#1165
b111 0
1%
#1170
0%
#1175
b1000 0
1%
#1180
0%
#1185
b1001 0
1%
#1190
0%
#1195
b0 0
1%
#1200
0%
#1205
b1100 !
b1100 )
b1100 1
b1 0
1%
#1210
0%
#1215
b1101 +
b10 0
1%
#1220
0%
#1225
b11 0
1%
#1230
0%
#1235
b100 0
1%
#1240
0%
#1245
b101 0
1%
#1250
0%
#1255
b110 0
1%
#1260
0%
#1265
b111 0
1%
#1270
0%
#1275
b1000 0
1%
#1280
0%
#1285
b1001 0
1%
#1290
0%
